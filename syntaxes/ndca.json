{
   "fileTypes": [
      "ndca"
   ],
   "foldingStartMarker": "\\{\\s*$",
   "foldingStopMarker": "^\\s*\\}",
   "name": "NDCA",
   "patterns": [
      {
         "name": "comment.line.double-slash.ndca",
         "begin": "//",
         "end": "\n"
      },
      {
         "name": "comment.block.ndca",
         "begin": "/\\*",
         "end": "\\*/"
      },
      {
         "name": "punctuation.parentheses.begin.ndca",
         "match": "\\("
      },
      {
         "name": "punctuation.parentheses.end.ndca",
         "match": "\\)"
      },
      {
         "name": "keyword.separator.period.ndca",
         "match": "\\)"
      },
      {
         "name": "keyword.operator.ndca",
         "match": "[\\[\\{\\]\\}`:,\\.;#]|->|\\.\\."
      },
      {
         "name": "keyword.operator.assignment.ndca",
         "match": "([+\\-*/%&|^]|\\*\\*|<<|>>>)?="
      },
      {
         "name": "keyword.operator.bitwise.ndca",
         "match": "[&|^~]|<<|>>>"
      },
      {
         "name": "keyword.operator.comparison.ndca",
         "match": "<|>|[=!<>]="
      },
      {
         "name": "keyword.operator.logical.ndca",
         "match": "\\b(or|xor|and|not|is|in)\\b"
      },
      {
         "name": "keyword.operator.math.ndca",
         "match": "[+\\-*/%]|\\*\\*"
      },
      {
         "name": "entity.name.type.ndca",
         "match": "\\b(Null|Integer|Cell|Tag|String|Type|Vector|CellArray|EmptySet|IntegerSet|CellSet|VectorSet|PatternMatcher|Regex)\\b"
      },
      {
         "name": "keyword.other.directive.ndca",
         "match": "@[A-Za-z_][A-Za-z_\\d]*"
      },
      {
         "name": "keyword.control.ndca",
         "match": "\\b(break|continue|for|become|remain|return|if|else|unless|case|match|assert|error)\\b"
      },
      {
         "name": "string.quoted.double.ndca",
         "begin": "\"",
         "end": "\"",
         "patterns": [
            {
               "name": "constant.character.escape.ndca",
               "match": "\\."
            }
         ]
      },
      {
         "name": "string.quoted.single.ndca",
         "begin": "'",
         "end": "'",
         "patterns": [
            {
               "name": "constant.character.escape.ndca",
               "match": "\\."
            }
         ]
      },
      {
         "name": "string.regexp.quoted.double.ndca",
         "begin": "r\"",
         "end": "\"",
         "patterns": [
            {
               "name": "constant.character.escape.ndca",
               "match": "\\."
            }
         ]
      },
      {
         "name": "string.regexp.quoted.single.ndca",
         "begin": "r'",
         "end": "'",
         "patterns": [
            {
               "name": "constant.character.escape.ndca",
               "match": "\\."
            }
         ]
      }
   ],
   "scopeName": "source.ndca"
}
